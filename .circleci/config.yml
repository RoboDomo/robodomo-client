# RoboDomo CI

aliases:
  - &restore-yarn-cache
    key: v1-yarncache-{{ checksum "yarn.lock" }}
  - &restore-npm-cache
    key: v1-node-modules-{{ checksum "yarn.lock" }}
  - &restore-webpack-cache
    key: v1-webpackcache-{{ checksum "yarn.lock" }}
  - &restore-npm-cache-tests
    key: v1-node-modules-tests-{{ checksum "./e2e-tests/yarn.lock" }}
  - &restore-app-cache
    keys:
      - v1-app-{{ .Branch }}-{{ .Revision }}
      - v1-app-{{ .Branch }}-
      - v1-app-
  - &restore-git-cache
    keys:
      - v1-git-{{ .Branch }}-{{ .Revision }}
      - v1-git-{{ .Branch }}-
      - v1-git-

defaults: &defaults
  working_directory: /home/circleci/repo
  docker:
    - image: circleci/node:12

version: 2.1
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - restore_cache: *restore-git-cache
      - checkout
      - restore_cache: *restore-yarn-cache
      - run:
          name: Install Node modules
          command: yarn install --frozen-lockfile
      - run:
          name: Prune dependencies
          command: |
            curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash
            ./bin/node-prune
            # remove webpack cache if there
            rm -rdf node_modules/.cache
            # git garbage collect
            git gc
      - save_cache:
          key: v1-node-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - save_cache:
          key: v1-git-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - save_cache:
          key: v1-yarncache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  install-test-dependencies:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Test Node modules
          command: yarn --cwd ./e2e-tests install --frozen-lockfile
      - save_cache:
          key: v1-node-modules-tests-{{ checksum "./e2e-tests/yarn.lock" }}
          paths:
            - e2e-tests/node_modules

  build-pwa:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - restore_cache: *restore-webpack-cache
      - run:
          name: Build Project
          command: yarn build
      - save_cache:
          key: v1-webpackcache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/.cache
      - save_cache:
          key: v1-app-{{ .Branch }}-{{ .Revision }}
          paths:
            - build

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run:
          name: Run ESLint
          command: yarn eslint src

  lint-tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache-tests
      - run:
          name: Lint tests
          command: yarn --cwd ./e2e-tests eslint .

  test-pwa:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache-tests
      - restore_cache: *restore-app-cache
      - run:
          name: Run server
          command: npx serve -l 3000 build
          background: true
      - run:
          name: Wait for project to start
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 10 http://localhost:3000
            :
      - run:
          name: start Browserstack Local
          command: sh ./.circleci/bs_local.sh
      - run:
          name: Run e2e tests
          command: sh ./.circleci/test_pwa.sh

  gimbal:
    <<: *defaults
    docker:
      - image: moduscreate/gimbal:1.1-latest
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - restore_cache: *restore-app-cache
      - run:
          name: Run Gimbal
          command: gimbal
      - store_artifacts:
          path: ./artifacts

workflows:
  version: 2
  build-and-test:
    jobs:
      - install-dependencies
      - install-test-dependencies
      - lint:
          requires:
            - install-dependencies
      - lint-tests:
          requires:
            - install-test-dependencies
      - build-pwa:
          requires:
            - install-dependencies
      - test-pwa:
          requires:
            - install-dependencies
            - build-pwa
            - install-test-dependencies
      - gimbal:
          requires:
            - build-pwa
